---
interface Props {
    projects: {
        name: string;
        isActive: boolean;
        description: string;
        highlights: string[];
        url: string;
    }[],
}

import Section from '@/components/Section.astro'

const { currentLocale } = Astro;
const { projects } = Astro.props;
const title = currentLocale === 'en' ? 'Projects' : 'Proyectos';
---

<Section title={title}>
    <div class="projects-container">
        {
            projects.map(({ url, description, highlights, name, isActive }) => {
                return (
                    <article class="project-card">
                        <header>
                            <h3>
                                <a href={url} target="_blank" title={`Ver el proyecto ${name}`}>
                                    {name}  
                                </a>
                                {isActive && <span class="active-indicator">&bull;</span>}
                            </h3>
                            <p class="project-description">{description}</p>
                        </header>    
                        <footer class="project-tags">
                            {
                                highlights.map((highlight) => (
                                    <span class="tag">{highlight}</span>
                                ))
                            }  
                        </footer>
                    </article>    
                )
            })
        }
    </div>
</Section>

<style>
    .projects-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        width: 100%;
    }

    .project-card {
        border-radius: 8px;
        border: 1px solid #202020;
        display: flex;
        flex-direction: column;
        padding: 1.5rem;
        background: #292929;
        color: #fdfdfd;
        transition: all 0.2s ease-in-out;
        height: 100%;
    }

    .project-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        border-color: #333;
    }

    .project-card header {
        margin-bottom: 1rem;
    }

    .project-card h3 {
        margin: 0 0 0.5rem 0;
        font-size: 1.2rem;
    }

    .project-card a {
        color: #fdfdfd;
        text-decoration: none;
    }

    .project-card a:hover {
        text-decoration: underline;
    }

    .project-description {
        font-size: 0.9rem;
        line-height: 1.4;
        color: #ccc;
        margin: 0;
    }

    .active-indicator {
        color: rgb(0, 188, 47);
        animation: flicker 3s ease-in infinite;
        margin-left: 0.5rem;
    }

    .project-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: auto;
    }

    .tag {
        border-radius: 6px;
        background: #555;
        color: #fdfdfd;
        font-size: 0.7rem;
        font-weight: 500;
        padding: 0.3rem 0.7rem;
        white-space: nowrap;
    }

    @keyframes flicker {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.25; }
    }

    /* Mobile styles */
    @media (max-width: 768px) {
        .projects-container {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .project-card {
            padding: 1.25rem;
            border: none;
            border-bottom: 1px solid #333;
            border-radius: 0;
        }

        .project-card:hover {
            transform: none;
            box-shadow: none;
        }
    }

    /* Small mobile devices */
    @media (max-width: 480px) {
        .project-description {
            font-size: 0.85rem;
        }
        
        .tag {
            font-size: 0.65rem;
            padding: 0.25rem 0.6rem;
        }
    }

    @media print {
        .active-indicator {
            animation: none;
        }
    }
</style>