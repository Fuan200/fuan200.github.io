---
interface Props {
    components: {
        name: string;
        model: string;
        details: string[];
        url: string;
    }[]
}

import Section from '@/components/Section.astro'

const { currentLocale } = Astro;
const { components } = Astro.props;

const titleComponents = currentLocale === 'en' ? 'PC Components' : 'Componentes PC';
---

<Section>
    <h1>Setup</h1>
    <h2>{titleComponents}</h2>
    <ul>
        {
        components.map(({ name, model, details, url }) => (
            <li>
            <article>
                <header>
                <h3>
                    <a href={url} target="_blank" title={`Ver mÃ¡s sobre ${name}`}>
                    {model}
                    </a>
                </h3>
                <p>{name}</p>
                </header>
                <footer>
                    {
                        details.map((detail) => {
                            return (
                                <span>{detail}</span>
                            )
                        })
                    }  
                </footer>
            </article>
            </li>
        ))
        }
    </ul>
</Section>

<style>
    h1 {
        padding-bottom: 10px;
        font-size: 2rem;
    }

    h2 {
        padding-bottom: 15px;
        font-size: 1.6rem;
    }

    ul {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-inline: -16px;
    }
  
    article {
        border-radius: 8px;
        border: 1px solid #202020;
        gap: 16px;
        display: flex;
        flex-direction: column;
        padding: 16px;
        height: 100%;
        background: #292929;
        color: #fdfdfd;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    article:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }
  
    article header {
        flex: 1;
    }
  
    article h3 {
        margin-bottom: 4px;
    }
  
    article a {
        color: #fdfdfd;
    }
  
    article a:hover {
        text-decoration: underline;
    }
  
    article p {
        font-size: 0.76rem;
        line-height: 1.2rem;
        margin-bottom: 4px;
    }
  
    article h3 span {
        color: rgb(0, 188, 47);
        animation-name: flicker;
        animation-duration: 3s;
        animation-timing-function: ease-in;
        animation-iteration-count: infinite;
        margin-left: 10px;
    }
  
    footer {
        display: flex;
        flex-wrap: wrap;
        gap: 4px;
        font-size: 0.6rem;
    }
  
    footer span {
        border-radius: 6px;
        background: #555;
        color: #fdfdfd;
        font-size: 0.8rem;
        font-weight: 500;
        padding: 0.2rem 0.6rem;
    }
  
    .github-code-link {
        margin-left: 5px;
    }
  
    @keyframes flicker {
        0% {
            opacity: 1;
        }
        50% {
            opacity: 0.25;
        }
        100% {
            opacity: 1;
        }
    }
  
    @media (width <= 700px) {
        ul {
            margin-inline: 0px;
        }
    
        article {
            border: none;
            box-shadow: 0 1px 1px #444;
            padding: 0 0 16px 0;
        }
    }
  
    @media print {
        article h3 span {
            animation-name: none;
        }
    }
</style>