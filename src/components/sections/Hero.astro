---
interface Props {
    basics: {
        name: string;
        label: string;
        image: string;
        location: {
        city: string;
        region: string;
        };
        profiles: {
            network: string;
            username: string;
            url: string;
        }[];
        phone: string;
        email: string;
        cv: string;
    };
}

import Section from '@/components/Section.astro'
import Mail from "@/icons/Mail.astro"
import Phone from "@/icons/Phone.astro"
import X from "@/icons/X.astro"
import LinkedIn from "@/icons/LinkedIn.astro"
import GitHub from "@/icons/GitHub.astro"
import WorldMap from "@/icons/WorldMap.astro"
import Translate from "@/icons/translate.astro"

const { currentLocale } = Astro;
const { basics } = Astro.props;
const { name, label, image, location, profiles, phone, email } = basics
const { city, region } = location
const download_cv = currentLocale === 'en' ? 'Download CV' : 'Descargar CV';

const SOCIAL_ICONS: Record<string, any> = {
    GitHub,
    LinkedIn,
    X,
}

const toggleLanguage = currentLocale === "en" ? "/" : "/en";

const linkedInInfo = profiles.find(({ network }) => network === "LinkedIn")
const linkedUrl = linkedInInfo?.url

const printInfo = [email, phone, linkedUrl].filter(Boolean).join(" &bull; ")
---

<Section>
    <div class="container">
        <div class="info">
            <h1>{name}</h1>
            <h2>{label}</h2>
            <span>
                <WorldMap />
                {city},{region}
            </span>
            <footer class="print">
                {printInfo}
            </footer>
            <footer class="no-print">
                {
                    email && (
                        <a href={`mailto:${email}`}
                        title={`Enviar un correo electronico a ${name} al correo ${email}`}
                        target="_black"
                        rel="noopener noreferrer"
                        >
                        <Mail />
                        </a>
                    )
                }
                {
                    phone && (
                        <a href={`tel:${phone}`}
                        title={`Llamar a ${name} al número ${phone}`}
                        target="_black"
                        rel="noopener noreferrer"
                        >
                        <Phone />
                        </a>
                    )
                }
                {
                    profiles.map(({ network, url }) => {
                        const Icon = SOCIAL_ICONS[network]

                        return(
                            <a href={url}
                            title={`Visitar el perfil de ${name} en ${network}`}
                            target="_blank"
                            rel="noopener nereferrer"
                            >
                                <Icon />
                            </a>
                        )
                    })
                }
                {
                    <a href={toggleLanguage}>
                        <Translate />
                    </a> 
                }
                {
                    basics.cv && (
                        <a href={basics.cv}
                        download
                        class="download-btn"
                        title={`Descargar el CV de ${name}`}>
                            {download_cv}
                        </a>
                    )
                }
            </footer>
        </div>
        <figure>
            <img src={image} alt={name}/>
        </figure> 
    </div>
</Section>

<style>
    .container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
    }

    .info {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        padding-right: 32px;
    }

    h1 {
        font-size: 2.1rem;
        color: #fdfdfd;
    }

    h2 {
        color: #fdfdfd;
        font-weight: 500;
        font-size: 1.3rem;
        text-wrap: balance;
    }

    img {
        aspect-ratio: 1 / 1;
        object-fit: cover;
        width: 128px;
        border-radius: 16px;
    }

    span {
        color: #bbb;
        display: flex;
        align-items: center;
        gap: .5rem;
        font-size: 0.90rem;
        letter-spacing: -0.01rem;
    }

    footer {
        color: #fdfdfd;
        font-size: 0.65rem;
        display: flex;
        gap: 12px;
        margin-top: 8px;
    }

    footer a {
        color: #b1b1b1;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border: 2px solid #555;
        padding: 4px;
        height: 36px;
        width: 36px;
        border-radius: 6px;
        transition: all .3s ease;
    }

    footer a:hover {
        background: #444;
        border: 1px solid #333;
        transform: scale(1.2);
    }

    footer a:hover svg {
        fill: #fdfdfd;
        transform: scale(1.5);
    }

    .download-btn {
        width: auto; /* Para que se ajuste al texto */
        min-width: 120px; /* Hace el botón más grande */
        font-size: 0.85rem;
        font-weight: bold;
        color: white;
        text-align: center;
        padding: 10px 16px;
        border-radius: 8px;
        text-decoration: none;
        border: 2px solid transparent;
        transition: background 0.3s ease, transform 0.2s;
    }

    .download-btn:hover {
        background-color: #0056b3 !important;
        transform: scale(1.07) !important;
    }
</style>
